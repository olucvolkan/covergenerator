import { createRouteHandlerClient } from '@supabase/auth-helpers-nextjs';
import { cookies } from 'next/headers';
import { NextResponse } from 'next/server';

export async function GET(request: Request) {
  try {
    // Get the cover letter ID from the URL parameters
    const { searchParams } = new URL(request.url);
    const id = searchParams.get('id');

    if (!id) {
      return new NextResponse('Cover letter ID is required', { status: 400 });
    }

    // Initialize Supabase client
    const supabase = createRouteHandlerClient({ cookies });

    // Get the current user to check authorization
    const { data: { session } } = await supabase.auth.getSession();
    if (!session?.user) {
      return new NextResponse('Unauthorized', { status: 401 });
    }

    // Get the cover letter content
    const { data: coverLetter, error: coverLetterError } = await supabase
      .from('cover_letters')
      .select('*')
      .eq('id', id)
      .eq('user_id', session.user.id)
      .single();

    if (coverLetterError || !coverLetter) {
      console.error('Error fetching cover letter:', coverLetterError);
      return new NextResponse('Cover letter not found or access denied', { status: 404 });
    }

    // Get user profile information
    const { data: profile } = await supabase
      .from('profiles')
      .select('*')
      .eq('id', session.user.id)
      .single();

    // Format the current date
    const currentDate = new Date().toLocaleDateString('en-US', { 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    });

    // Generate HTML content for the cover letter
    const html = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>Cover Letter</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333;
          max-width: 800px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          margin-bottom: 40px;
        }
        .sender-info {
          margin-bottom: 30px;
        }
        .recipient-info {
          margin-bottom: 30px;
        }
        .date {
          margin-bottom: 30px;
        }
        .greeting {
          margin-bottom: 20px;
          font-weight: bold;
        }
        .content {
          margin-bottom: 30px;
          white-space: pre-line;
        }
        .closing {
          margin-bottom: 10px;
        }
        .signature {
          margin-bottom: 40px;
        }
        .footer {
          margin-top: 50px;
          font-size: 0.8em;
          color: #666;
          text-align: center;
        }
        @media print {
          body {
            padding: 0;
          }
          .no-print {
            display: none;
          }
        }
      </style>
    </head>
    <body>
      <div class="no-print" style="text-align: center; margin-bottom: 20px;">
        <button onclick="window.print()" style="padding: 10px 20px; background-color: #4299e1; color: white; border: none; border-radius: 4px; cursor: pointer;">
          Print PDF
        </button>
      </div>
      
      <div class="header">
        <div class="sender-info">
          <p><strong>${profile?.full_name || session.user.email}</strong></p>
          <p>${profile?.email || session.user.email}</p>
          ${profile?.phone ? `<p>${profile.phone}</p>` : ''}
          ${profile?.address ? `<p>${profile.address}</p>` : ''}
        </div>
        
        <div class="date">
          <p>${currentDate}</p>
        </div>
        
        <div class="recipient-info">
          ${coverLetter.company_name ? `<p><strong>${coverLetter.company_name}</strong></p>` : ''}
          ${coverLetter.recipient ? `<p>${coverLetter.recipient}</p>` : ''}
        </div>
        
        <div class="greeting">
          <p>Dear ${coverLetter.recipient_name || 'Hiring Manager'},</p>
        </div>
      </div>
      
      <div class="content">
        ${coverLetter.content}
      </div>
      
      <div class="closing">
        <p>Sincerely,</p>
      </div>
      
      <div class="signature">
        <p>${profile?.full_name || session.user.email}</p>
      </div>
      
      <div class="footer">
        <p>Generated by CoverGen - ${new Date().toISOString().split('T')[0]}</p>
      </div>
    </body>
    </html>
    `;

    // Return the HTML content with appropriate headers
    return new NextResponse(html, {
      headers: {
        'Content-Type': 'text/html',
      },
    });
  } catch (error) {
    console.error('Error viewing cover letter:', error);
    return new NextResponse('Failed to view cover letter', { status: 500 });
  }
} 